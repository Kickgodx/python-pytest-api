{"uid":"297b5979fc19a2b0","name":"Создание питомца без обязательного поля name","fullName":"tests.pet.test_pet.TestPet#test_create_pet_without_name","historyId":"e63e8b11d1da3fee1674038485705cc5","time":{"start":1744327889016,"stop":1744327889029,"duration":13},"description":"Добавление питомца без обязательного поля name","descriptionHtml":"<p>Добавление питомца без обязательного поля name</p>\n","status":"failed","statusMessage":"AssertionError: Статус код 200 не равен ожидаемому 400","statusTrace":"self = <test_pet.TestPet object at 0x7f3c7dad4c80>\nclient = <src.models.client.Client object at 0x7f3c7d72a6f0>\npet_helper = <src.func.pet.helpers.PetHelper object at 0x7f3c7d72a7b0>\npet_data = Pet(id=599, category=Category(id=88, name='Eric Warner'), name=None, photo_urls=['https://picsum.photos/900/182'], tags=[Tag(id=541, name='Azure')], status='pending')\n\n    @allure.story(\"Создание питомцев\")\n    @allure.title(\"Создание питомца без обязательного поля name\")\n    def test_create_pet_without_name(self, client, pet_helper, pet_data):\n    \t\"\"\"Добавление питомца без обязательного поля name\"\"\"\n    \tpet_data.name = None\n>   \tresponse = pet_helper.create_pet(client, pet_data, 400)\n\ntests/pet/test_pet.py:223: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/func/pet/helpers.py:19: in create_pet\n    CustomAsserts.check_status_code(response, expected_status_code)\nsrc/tech/custom_asserts.py:53: in check_status_code\n    _check_status_code(response, expected_status_code)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresp = <Response [200]>, expected_code = 400\n\n    @step(f\"Статус код = {expected_status_code}\")\n    def _check_status_code(resp, expected_code):\n>   \tassert resp.status_code == expected_code, f\"Статус код {resp.status_code} не равен ожидаемому {expected_code}\"\nE    AssertionError: Статус код 200 не равен ожидаемому 400\n\nsrc/tech/custom_asserts.py:51: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1744327868637,"stop":1744327868639,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_helper","time":{"start":1744327868639,"stop":1744327868640,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client","time":{"start":1744327868639,"stop":1744327868639,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_data","time":{"start":1744327889013,"stop":1744327889015,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Добавление питомца без обязательного поля name","status":"failed","statusMessage":"AssertionError: Статус код 200 не равен ожидаемому 400","statusTrace":"self = <test_pet.TestPet object at 0x7f3c7dad4c80>\nclient = <src.models.client.Client object at 0x7f3c7d72a6f0>\npet_helper = <src.func.pet.helpers.PetHelper object at 0x7f3c7d72a7b0>\npet_data = Pet(id=599, category=Category(id=88, name='Eric Warner'), name=None, photo_urls=['https://picsum.photos/900/182'], tags=[Tag(id=541, name='Azure')], status='pending')\n\n    @allure.story(\"Создание питомцев\")\n    @allure.title(\"Создание питомца без обязательного поля name\")\n    def test_create_pet_without_name(self, client, pet_helper, pet_data):\n    \t\"\"\"Добавление питомца без обязательного поля name\"\"\"\n    \tpet_data.name = None\n>   \tresponse = pet_helper.create_pet(client, pet_data, 400)\n\ntests/pet/test_pet.py:223: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/func/pet/helpers.py:19: in create_pet\n    CustomAsserts.check_status_code(response, expected_status_code)\nsrc/tech/custom_asserts.py:53: in check_status_code\n    _check_status_code(response, expected_status_code)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresp = <Response [200]>, expected_code = 400\n\n    @step(f\"Статус код = {expected_status_code}\")\n    def _check_status_code(resp, expected_code):\n>   \tassert resp.status_code == expected_code, f\"Статус код {resp.status_code} не равен ожидаемому {expected_code}\"\nE    AssertionError: Статус код 200 не равен ожидаемому 400\n\nsrc/tech/custom_asserts.py:51: AssertionError","steps":[{"name":"Создание питомца","time":{"start":1744327889016,"stop":1744327889029,"duration":13},"status":"failed","statusMessage":"AssertionError: Статус код 200 не равен ожидаемому 400\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-pytest-api/python-pytest-api/src/func/pet/helpers.py\", line 19, in create_pet\n    CustomAsserts.check_status_code(response, expected_status_code)\n  File \"/home/runner/work/python-pytest-api/python-pytest-api/src/tech/custom_asserts.py\", line 53, in check_status_code\n    _check_status_code(response, expected_status_code)\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-pytest-api/python-pytest-api/src/tech/custom_asserts.py\", line 51, in _check_status_code\n    assert resp.status_code == expected_code, f\"Статус код {resp.status_code} не равен ожидаемому {expected_code}\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[{"name":"Статус код = 400","time":{"start":1744327889029,"stop":1744327889029,"duration":0},"status":"failed","statusMessage":"AssertionError: Статус код 200 не равен ожидаемому 400\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-pytest-api/python-pytest-api/src/tech/custom_asserts.py\", line 51, in _check_status_code\n    assert resp.status_code == expected_code, f\"Статус код {resp.status_code} не равен ожидаемому {expected_code}\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[{"name":"resp","value":"<Response [200]>"},{"name":"expected_code","value":"400"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"17a63bcefe842f21","name":"Request","source":"17a63bcefe842f21.txt","type":"text/plain","size":39},{"uid":"80506d21742c6668","name":"Request headers","source":"80506d21742c6668.json","type":"application/json","size":196},{"uid":"50ce2d947a8547ea","name":"Request body","source":"50ce2d947a8547ea.json","type":"application/json","size":225},{"uid":"a751e236bca85d40","name":"Response status code","source":"a751e236bca85d40.txt","type":"text/plain","size":3},{"uid":"d3174ad667597225","name":"Response Headers","source":"d3174ad667597225.json","type":"application/json","size":357},{"uid":"e84158160b8a98ad","name":"Response body","source":"e84158160b8a98ad.json","type":"application/json","size":225}],"parameters":[{"name":"client","value":"<src.models.client.Client object at 0x7f3c7d72a6f0>"},{"name":"data","value":"Pet(id=599, category=Category(id=88, name='Eric Warner'), name=None, photo_urls=['https://picsum.photos/900/182'], tags=[Tag(id=541, name='Azure')], status='pending')"},{"name":"expected_status_code","value":"400"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":6,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"feature","value":"Pet"},{"name":"epic","value":"Petstore API"},{"name":"story","value":"Создание питомцев"},{"name":"parentSuite","value":"tests.pet"},{"name":"suite","value":"test_pet"},{"name":"subSuite","value":"TestPet"},{"name":"host","value":"fv-az1065-663"},{"name":"thread","value":"2296-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.pet.test_pet"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"297b5979fc19a2b0.json","parameterValues":[]}